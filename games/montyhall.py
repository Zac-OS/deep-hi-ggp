# dumping propnet for /Users/zac/work/comp/thesis/code/rulesheets_gdl2/montyhall.gdl
# number of roles 2

from constants import *

roles = [
    'candidate',
    'random',
]

entries = (
    (0, -1, PROPOSITION, [94], [6], other, 'anon'),
    (1, -1, PROPOSITION, [], [104], input, '( does candidate ( choose 1 ) )'),
    (2, -1, OR, [33, 35, 18], [62]),
    (3, -1, AND, [17, 115], [117]),
    (4, -1, AND, [108, 17, 39, 7], [124]),
    (5, -1, AND, [100, 17], [111]),
    (6, -1, TRANSITION, [0], [96]),
    (7, -1, PROPOSITION, [85], [79, 4, 123, 10, 41], base, '( true ( step 2 ) )'),
    (8, -1, TRANSITION, [63], [116]),
    (9, -1, AND, [43, 93, 20], [97]),
    (10, -1, OR, [31, 7], [75]),
    (11, -1, PROPOSITION, [31], [51], other, 'anon'),
    (12, -1, PROPOSITION, [104], [34, 65], other, '( next_chosen 1 )'),
    (13, -1, PROPOSITION, [], [94], input, '( does random ( hide_car 3 ) )'),
    (14, -1, PROPOSITION, [112], [69, 108, 80, 34], base, '( true ( car 1 ) )'),
    (15, -1, PROPOSITION, [87], [], legal, '( legal random ( hide_car 2 ) )'),
    (16, -1, PROPOSITION, [92], [], legal, '( legal candidate ( choose 3 ) )'),
    (17, -1, PROPOSITION, [121], [3, 5, 4, 103, 76], base, '( true ( closed 1 ) )'),
    (18, -1, AND, [64, 42], [2]),
    (19, -1, PROPOSITION, [103], [], legal, '( legal random ( hide_car 1 ) )'),
    (20, -1, NOT, [64], [9, 41]),
    (21, -1, PROPOSITION, [80], [112], other, 'anon'),
    (22, -1, OR, [69, 26, 106], [67]),
    (23, -1, PROPOSITION, [], [], input, '( does random switch )'),
    (24, 1, CONSTANT, [], [88]),
    (25, -1, PROPOSITION, [50], [110], other, 'anon'),
    (26, -1, AND, [96, 64], [22]),
    (27, -1, AND, [100, 116], [58]),
    (28, -1, NOT, [53], [79, 35]),
    (29, -1, PROPOSITION, [114], [], terminal, 'terminal'),
    (30, -1, TRANSITION, [65], [119]),
    (31, -1, PROPOSITION, [84], [44, 32, 37, 73, 34, 10, 11], base, '( true ( step 3 ) )'),
    (32, -1, AND, [31, 96, 54], [48]),
    (33, -1, AND, [108, 119], [2]),
    (34, -1, AND, [12, 31, 14], [98]),
    (35, -1, AND, [71, 28], [2]),
    (36, -1, NOT, [43], [89, 102, 86]),
    (37, -1, PROPOSITION, [31], [], legal, '( legal random noop )'),
    (38, -1, PROPOSITION, [], [60], input, '( does candidate ( choose 2 ) )'),
    (39, -1, NOT, [119], [4, 76]),
    (40, -1, PROPOSITION, [79], [], legal, '( legal random ( open_door 2 ) )'),
    (41, -1, AND, [93, 7, 20, 42], [52]),
    (42, -1, NOT, [96], [18, 41]),
    (43, -1, PROPOSITION, [], [36, 9, 76, 118], input, '( does candidate switch )'),
    (44, -1, PROPOSITION, [31], [], legal, '( legal candidate switch )'),
    (45, -1, PROPOSITION, [107], [], legal, '( legal random ( hide_car 3 ) )'),
    (46, -1, PROPOSITION, [], [80], input, '( does random ( hide_car 1 ) )'),
    (47, -1, TRANSITION, [56], [53]),
    (48, -1, PROPOSITION, [32], [], sees, '( sees candidate ( car 3 ) )'),
    (49, -1, NOT, [61], [57]),
    (50, -1, PROPOSITION, [60], [25, 73], other, '( next_chosen 2 )'),
    (51, -1, TRANSITION, [11], [114]),
    (52, -1, PROPOSITION, [41], [], legal, '( legal random ( open_door 3 ) )'),
    (53, -1, PROPOSITION, [47], [73, 28, 125, 106], base, '( true ( car 2 ) )'),
    (54, -1, PROPOSITION, [97], [32, 109], other, '( next_chosen 3 )'),
    (55, -1, TRANSITION, [83], [100]),
    (56, -1, PROPOSITION, [125], [47], other, 'anon'),
    (57, -1, AND, [93, 49], [77]),
    (58, -1, PROPOSITION, [27], [], legal, '( legal candidate ( choose 2 ) )'),
    (59, -1, NOT, [71], [79, 118]),
    (60, -1, OR, [38, 118, 86], [50]),
    (61, -1, PROPOSITION, [], [68, 49], input, '( does random ( open_door 3 ) )'),
    (62, -1, PROPOSITION, [2], [], goal, '( goal candidate 0 )'),
    (63, -1, OR, [83, 78], [8]),
    (64, -1, PROPOSITION, [90], [89, 26, 18, 20], base, '( true ( chosen 3 ) )'),
    (65, -1, PROPOSITION, [12], [30], other, 'anon'),
    (66, -1, TRANSITION, [126], [93]),
    (67, -1, PROPOSITION, [22], [], goal, '( goal candidate 100 )'),
    (68, -1, PROPOSITION, [61], [], sees, '( sees candidate ( open_door 3 ) )'),
    (69, -1, AND, [14, 119], [22]),
    (70, -1, PROPOSITION, [], [72, 115], input, '( does random ( open_door 1 ) )'),
    (71, -1, PROPOSITION, [110], [35, 59, 106, 86], base, '( true ( chosen 2 ) )'),
    (72, -1, PROPOSITION, [70], [], sees, '( sees candidate ( open_door 1 ) )'),
    (73, -1, AND, [31, 50, 53], [81]),
    (74, -1, AND, [116, 82], [78]),
    (75, -1, PROPOSITION, [10], [], legal, '( legal candidate noop )'),
    (76, -1, AND, [43, 17, 39], [104]),
    (77, -1, PROPOSITION, [57], [126], other, 'anon'),
    (78, -1, PROPOSITION, [74], [63], other, 'anon'),
    (79, -1, AND, [7, 116, 28, 59], [40]),
    (80, -1, OR, [14, 46], [21]),
    (81, -1, PROPOSITION, [73], [], sees, '( sees candidate ( car 2 ) )'),
    (82, -1, NOT, [101], [74]),
    (83, -1, PROPOSITION, [], [99, 63, 55, 126], init, 'init'),
    (84, -1, TRANSITION, [123], [31]),
    (85, -1, TRANSITION, [122], [7]),
    (86, -1, AND, [71, 36], [60]),
    (87, -1, AND, [100, 116], [15]),
    (88, -1, PROPOSITION, [24], [], goal, '( goal random 100 )'),
    (89, -1, AND, [36, 64], [97]),
    (90, -1, TRANSITION, [109], [64]),
    (91, -1, PROPOSITION, [101], [], sees, '( sees candidate ( open_door 2 ) )'),
    (92, -1, AND, [93, 100], [16]),
    (93, -1, PROPOSITION, [66], [107, 9, 57, 41, 92], base, '( true ( closed 3 ) )'),
    (94, -1, OR, [96, 13], [0]),
    (95, -1, PROPOSITION, [], [125], input, '( does random ( hide_car 2 ) )'),
    (96, -1, PROPOSITION, [6], [94, 32, 26, 42], base, '( true ( car 3 ) )'),
    (97, -1, OR, [89, 9, 105], [54]),
    (98, -1, PROPOSITION, [34], [], sees, '( sees candidate ( car 1 ) )'),
    (99, -1, OR, [83, 117], [121]),
    (100, -1, PROPOSITION, [55], [5, 107, 122, 103, 27, 92, 87], base, '( true ( step 1 ) )'),
    (101, -1, PROPOSITION, [], [91, 82], input, '( does random ( open_door 2 ) )'),
    (102, -1, AND, [36, 119], [104]),
    (103, -1, AND, [100, 17], [19]),
    (104, -1, OR, [1, 102, 76], [12]),
    (105, -1, PROPOSITION, [], [97], input, '( does candidate ( choose 3 ) )'),
    (106, -1, AND, [71, 53], [22]),
    (107, -1, AND, [93, 100], [45]),
    (108, -1, NOT, [14], [4, 33]),
    (109, -1, PROPOSITION, [54], [90], other, 'anon'),
    (110, -1, TRANSITION, [25], [71]),
    (111, -1, PROPOSITION, [5], [], legal, '( legal candidate ( choose 1 ) )'),
    (112, -1, TRANSITION, [21], [14]),
    (113, -1, PROPOSITION, [], [], input, '( does candidate noop )'),
    (114, -1, PROPOSITION, [51], [29], base, '( true ( step 4 ) )'),
    (115, -1, NOT, [70], [3]),
    (116, -1, PROPOSITION, [8], [79, 74, 27, 118, 87], base, '( true ( closed 2 ) )'),
    (117, -1, PROPOSITION, [3], [99], other, 'anon'),
    (118, -1, AND, [43, 116, 59], [60]),
    (119, -1, PROPOSITION, [30], [69, 33, 102, 39], base, '( true ( chosen 1 ) )'),
    (120, -1, PROPOSITION, [], [], input, '( does random noop )'),
    (121, -1, TRANSITION, [99], [17]),
    (122, -1, PROPOSITION, [100], [85], other, 'anon'),
    (123, -1, PROPOSITION, [7], [84], other, 'anon'),
    (124, -1, PROPOSITION, [4], [], legal, '( legal random ( open_door 1 ) )'),
    (125, -1, OR, [95, 53], [56]),
    (126, -1, OR, [83, 77], [66]),
)

# DONE
